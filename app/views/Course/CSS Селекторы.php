<?php

// $name = 'Основы CSS';
// $data = '01.01.2001';
// $opic = '
// <p>CSS — формальный язык описания внешнего вида документа, написанного с использованием языка разметки. Также может применяться к любым XML-документам, например, к SVG или XUL</p>
// <p>CSS (Cascading Style Sheets) — это код, который вы используете для стилизации вашей веб-страницы. Основы CSS помогут вам понять, что вам нужно для начала работы. Мы ответим на такие вопросы как: Как сделать мой текст черным или красным? Как сделать так, чтобы контент появлялся в определённом месте на экране? Как украсить мою веб-страницу с помощью фоновых изображений и цветов?</p>

// ';
// $photo = "<img src='/img/courses/CSS3_logo_and_wordmark.svg.png' alt=''>";
$content = '
<p>
CSS содержит правила стиля, которые интерпретируются браузером, а затем применяются к соответствующим элементам вашего документа. Правило стиля состоит из трех частей:
<ul>
 <p>Селектор — это HTML-тег, к которому будет применяться стиль. Это может быть любой тег, например, <xmp><h1> или <table> и т.д.</xmp>
 <p>Свойство — это тип атрибута HTML-тега. Проще говоря, все атрибуты в HTML преобразуются в свойства CSS. Ими могут быть цвета, границы, отступы и т.д.
 <p>Значение — задается свойству. Например, свойство цвета может иметь значение green, #008000 и т.д.
</ul>
Синтаксис селекторов в CSS следующий:
<xmp>
селектор { свойство: значение }
</xmp>

<p>
Пример. Вы можете задать границу таблицы следующим образом:

<xmp>
table {
  border: 2px solid #FF8C00;
}

</xmp>
<p>



Здесь синтаксис селектора такой: table — это селектор, а border — свойство, а 2px solid #FF8C00 — значение этого свойства.

<p>
Вы можете задавать селекторы различными способами, как Вам будет удобно. Ниже представлены виды селекторов.
<p>
<strong>Стандартные селекторы</strong>
<p>
Это тот же самый селектор, который Вы видели выше. Опять же, еще один пример, чтобы дать цвет всем заголовкам первого уровня:

h1 {
  color: #8B4513;
}

<p>
<strong>Универсальные селекторы</strong>
Вместо того, чтобы выбирать элементы определенного типа, универсальный селектор вполне просто соответствует имени любого типа элемента:

* {
  color: #808080;
}
<p>
Это правило отображает в нашем документе содержимое каждого элемента в сером цвете.

<p>
<strong>Селекторы потомков или вложенные селекторы</strong>
Предположим, Вы хотите применить правило стиля к определенному элементу только тогда, когда оно находится внутри определенного элемента, то в этом Вам помогут вложенные селекторы или селекторы потомков. Как показано в следующем примере, правило стиля будет применяться к элементу <xmp><em></xmp> только тогда, когда оно находится внутри тега <xmp><ul>.</xmp>

<xmp>
ul em {
  color: #CD5C5C; 
}
</xmp>

<p>
<strong>Селекторы класса</strong>
Вы можете задать правила стиля для элементов на основе атрибута class. Все элементы, имеющие этот класс, будут отформатированы в соответствии с определенным правилом.

.blue {
  color: #0000FF; 
}

<p>
Это правило отображает в нашем документе содержимое в синем цвете для каждого элемента с атрибутом class="blue". Вы можете сделать селектор класса немного более конкретным. Например:

h1.blue {
  color: #0000FF; 
}

<p>
Это правило отображает содержимое в синем цвете только для элементов <xmp><h1></xmp> с атрибутом class="blue".
Вы можете применить к одному элементу несколько селекторов класса. Рассмотрим следующий пример:
<xmp>
<p class="center bold">
  Этот абзац будет оформлен классами center и bold.
</p></xmp>

<p>
<strong>ID селекторы</strong>
Вы можете задать правила стиля для элементов на основе атрибутa id. Все элементы, имеющие этот идентификатор, будут отформатированы в соответствии с определенным правилом.

#blue {
  color: #0000FF; 
}

<p>
Это правило отображает в нашем документе содержимое в синем цвете для каждого элемента с атрибутом id="blue". Вы можете сделать id селектор немного более конкретным. Например:

h1#blue {
  color: #0000FF; 
}

<p>
Это правило отображает содержимое в синем цвете только для элементов <xmp><h1></xmp> с атрибутом id="blue".

Истинная мощность id селекторов — это когда они используются в качестве основы для селекторов-потомков, например:

#blue h2 {
  color: #0000FF; 
}

<p>
В этом примере все заголовки второго уровня будут отображаться в синем цвете, когда они будут находиться в тегах с атрибутом id="blue".
<p>
<strong>Дочерние селекторы</strong>
Вы уже знаете селекторы потомков. Существует еще один тип селектора, который очень похож на селекторы потомков, но имеет другую функциональность, это дочерний селектор. Рассмотрим следующий пример:

body > p {
  color: #0000FF; 
}
<p>
Это правило будет отображать все абзацы в синем цвете, если они являются прямым дочерним элементом <xmp><body>.</xmp> Другие абзацы, помещенные внутри других элементов типа<xmp> <div> или <td>, </xmp>не будут иметь никакого эффекта этого правила.
<p>
<strong>Соседние селекторы</strong>
HTML-элементы, идущие друг за другом, называются соседними. Рассмотрим следующий пример:

strong + em {
  color: #0000FF; 
}
<p>
Это правило будет отображать содержимое тега<xmp> <em> </xmp>в синем цвете, если он идет после элемента <xmp><strong>. Другие теги <em>, идущие не после тега <strong>, не будут иметь никакого эффекта этого правила.</xmp>

<p>
<strong>Селекторы атрибутов</strong>
Вы также можете применять стили к HTML-элементам с определенными атрибутами. Ниже правило стиля будет соответствовать всем input элементам, имеющим атрибут type со значением text:

input[type = "text"] {
  color: #0000FF; 
}

<p>
Преимущество использования селекторов атрибутов заключается в том, что элемент <xmp><input type = "submit" /> </xmp>не изменяется, а цвет применяется только к нужным текстовым полям.
<p>
Для селектора атрибутов применяются следующие правила:
<p>
<xmp>
p[lang] — выбирает все элементы абзаца с атрибутом lang.
p[lang="ru"] — выбирает все элементы абзаца, где атрибут lang имеет точное значение «ru».
p[lang~="ru"] — выбирает все элементы абзаца, где атрибут lang содержит слово «ru».
p[lang|="ru"] — выбирает все элементы абзаца, где атрибут lang содержит значения, которые являются точными «ru» или начинаются с «ru».
<strong>Несколько правил стиля</strong>
</xmp>
<p>Возможно, Вам потребуется определить несколько правил стиля для одного элемента. Вы можете задать эти правила для объединения нескольких свойств и соответствующих значений в один блок, как показано в следующем примере:

h1 {
  color: #00CED1;
  letter-spacing: .2em;
  text-transform: lowercase;
  margin-bottom: 2em;
  font-weight: 700;
}
<p>
Все пары свойств и значений разделяются точкой с запятой (;). Вы можете сохранить их в одной строке или нескольких строках. Для лучшей читаемости сохраняйте их в отдельных строках.
<p>
Не беспокойтесь о свойствах, упомянутых в вышеупомянутом блоке. Эти свойства будут объяснены в следующих уроках.

<xmp><strong>Группировка селекторов в CSS</strong></xmp>
Вы можете применить стиль для многих селекторов, если хотите. Просто отделите селектора запятой, как показано в следующем примере:
<p>
h1, h2, h3 {
  color: #00CED1;
  letter-spacing: .2em;
  text-transform: lowercase;
  margin-bottom: 2em;
  font-weight: 700;
}
<p>
Это правило стиля будет применено к элементам h1, h2 и h3. Порядок списка при группировки селекторов не имеет значения. Все элементы в селекторе будут иметь соответствующие объявления, применяемые к ним.
<p>
Вы можете группировать различные id селектора вместе, как показано ниже:

#header, #content, #footer {
  position: absolute;
  width: 300px;
  left: 250px;
}
';
